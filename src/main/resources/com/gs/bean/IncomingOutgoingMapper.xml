<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gs.dao.IncomingOutgoingDAO">

	<resultMap id="incomingOutgoingResultMap" type="incomingOutgoing">
		<id column="inOutId" property="inOutId"></id>
		<result column="inOutMoney" property="inOutMoney"></result>
		<result column="inOutCreatedTime" property="inOutCreatedTime"></result>
		<result column="inOutStatus" property="inOutStatus"></result>
		<association property="incomingType" javaType="com.gs.bean.IncomingType">
			<id column="inType_id" property="inTypeId"/>
			<result column="inTypeName" property="inTypeName"/>
		</association>

		<association property="outgoingType" javaType="com.gs.bean.OutgoingType">
			<id column="outType_id" property="outTypeId"/>
			<result column="outTypeName" property="outTypeName"/>
		</association>

		<association property="user" javaType="com.gs.bean.User">
			<id column="userId" property="userId"/>
			<result column="userName" property="userName"/>
		</association>

	</resultMap>

	<insert id="insert"  parameterType="incomingOutgoing">
		<![CDATA[
			insert into t_incoming_outgoing(inOutId, inTypeId,outTypeId,inOutMoney,inOutCreatedUser,inOutCreatedTime,inOutStatus)
			 values(uuid(), #{incomingType.inTypeId},#{outgoingType.outTypeId},#{inOutMoney},#{user.userId},now(),#{inOutStatus})
		]]>
	</insert>

	<insert id="batchInsert"  parameterType="list">
		<![CDATA[

		]]>
	</insert>

	<delete id="delete" parameterType="incomingOutgoing">
		<![CDATA[

		]]>
	</delete>

	<delete id="deleteById" parameterType="string">
		<![CDATA[

		]]>
	</delete>

	<delete id="batchDelete" parameterType="list">
		<![CDATA[

		]]>
	</delete>

	<update id="update" parameterType="incomingOutgoing">
		<![CDATA[
			update t_incoming_outgoing set inOutMoney = #{inOutMoney},inOutStatus = 'Y' where inOutId = #{inOutId}
		]]>
	</update>

	<update id="batchUpdate" parameterType="list">
		<![CDATA[

		]]>
	</update>

	<select id="queryAll" resultMap="incomingOutgoingResultMap">
		<![CDATA[

		]]>
	</select>

	<select id="queryByStatus" resultMap="incomingOutgoingResultMap" parameterType="string">
		<![CDATA[

		]]>
	</select>

	<select id="query" parameterType="incomingOutgoing" resultType="incomingOutgoing">
		<![CDATA[

		]]>
	</select>

	<select id="queryById" parameterType="string" resultType="incomingOutgoing">
		<![CDATA[

		]]>
	</select>

	<select id="queryByPager" resultType="list" resultMap="incomingOutgoingResultMap" parameterType="com.gs.common.bean.Pager">
		<![CDATA[
			select io.*,i.inTypeId as inType_id, i.inTypeName,o.outTypeId as outType_id,o.outTypeName,u.userId ,u.userName from t_incoming_outgoing io
				LEFT JOIN t_incoming_type i on io.inTypeId = i.inTypeId
				LEFT JOIN t_outgoing_type o on io.outTypeId = o.outTypeId
				LEFT JOIN  t_user u on io.inOutCreatedUser = u.userId
				order by io.inOutCreatedTime Desc limit #{beginIndex}, #{pageSize}
		]]>
	</select>

	<select id="count" resultType="int">
		<![CDATA[
			select count(*) from t_incoming_outgoing
		]]>
	</select>

	<select id="queryByInOutType" resultType="list" resultMap="incomingOutgoingResultMap">
		<![CDATA[
			select io.*,i.inTypeId as inType_id, i.inTypeName,o.outTypeId as outType_id,o.outTypeName,u.userId ,u.userName from t_incoming_outgoing io
				LEFT JOIN t_incoming_type i on io.inTypeId = i.inTypeId
				LEFT JOIN t_outgoing_type o on io.outTypeId = o.outTypeId
				LEFT JOIN  t_user u on io.inOutCreatedUser = u.userId where 1 = 1
		]]>
		<if test="incomingOutgoing.inOutType ==1">
			and io.outTypeId is null
		</if>
		<if test="incomingOutgoing.inOutType ==2">
			and io.inTypeId is null
		</if>
        order by io.inOutCreatedTime Desc
		limit #{pager.beginIndex}, #{pager.pageSize}
	</select>

	<select id="countByInOutType" resultType="int">
		<![CDATA[
			select count(*) from t_incoming_outgoing where 1 = 1
		]]>
		<if test="inOutType ==1">
			and outTypeId is  null
		</if>
		<if test="inOutType ==2">
			and inTypeId is  null
		</if>
	</select>

	<update id="inactive" parameterType="string">
		<![CDATA[
			update t_incoming_outgoing set inOutStatus = 'N' where inOutId = #{inOutId}
		]]>
	</update>

	<update id="active" parameterType="string">
		<![CDATA[
			update t_incoming_outgoing set inOutStatus = 'Y' where inOutId = #{inOutId}
		]]>
	</update>

</mapper>
